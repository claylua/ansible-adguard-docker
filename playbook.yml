- hosts: all
  gather_facts: no
  tasks:
    # Update system-level dependencies
    - name: update and upgrade apt packages
      become: true
      apt:
        upgrade: dist
        update_cache: true
        
    # Set Static IP of PiHole so other devices can query it for DNS lookups
    - name: Install network manager
      become: true
      apt:
        name: network-manager
        state: present
    - name: configure network
      become: true
      community.general.nmcli:
        state: present
        conn_name: eth0
        ifname: eth0
        type: ethernet
        ip4: 192.168.50.199/24
        gw4: 192.168.50.1
        dns4:
          - 1.1.1.2
        
    - name: Install docker dependencies
      become: true
      apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - python3-pip
        - python3-setuptools
        - htop

    - name: Add  Dockerâ€™s official GPG key
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

    - name: add docker repository to apt
      become: true
      apt_repository:
        repo: deb [arch=armhf signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian buster stable
        state: present
    - name: install docker
      become: true
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: Add user to docker group
      become: true
      user:
        name: pi
        groups: docker
        append: true
    - name: Enable & Start Docker service
      become: true
      service:
        name: docker
        enabled: true
        state: started

    - name: Install pip components
      become: true
      pip:
        executable: pip3
        name:
          - docker
          - docker-compose
          - virtualenv

    # Automatically upgrade apt packages
    - name: install unattended upgrades
      become: true
      apt:
        name: unattended-upgrades
        state: present
    - name: Setup unattended upgrades
      debconf:
        name: unattended-upgrades
        question: unattended-upgrades/enable_auto_updates
        vtype: boolean
        value: "true"

    # Prevents SSH brute force attacks
    - name: install fail2ban
      become: true
      apt:
        name: fail2ban
        state: present
    
    # Install and enable NTP to ensure the clock remains accurate
    - name: install ntp
      become: true
      apt:
        name: ntp
        state: present
    - name: enable ntp
      service:
        name: ntp
        state: started
        enabled: true
        
    # Installs firewall
    - name: install ufw
      become: true
      apt:
        name: ufw
        state: present

    # Rate limits SSH attempts
    - name: limit ssh
      become: true
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp

    # Firewall rules
    - name: Allow all access to SSH, DNS, and WWW
      become: true
      community.general.ufw:
        rule: allow
        app: '{{ item }}'
      loop:
        - SSH
        - DNS
        - WWW
        - WWW Secure
    - name: enable ufw and default to deny
      become: true
      ufw:
        state: enabled
        default: deny

    - name: Allow all access to port 2912
      become: true
      community.general.ufw:
        rule: allow
        port: '2912'

    - name: Allow all access to port 46399
      become: true
      community.general.ufw:
        rule: allow
        port: '46399'

    - name: Allow all access to port 3000
      become: true
      community.general.ufw:
        rule: allow
        port: '3000'

    - name: Git checkout
      become: true
      ansible.builtin.git:
        repo: 'https://github.com/claylua/ansible-adguard-docker.git'
        dest: /root/adguard
        force: yes
    
    - name: Create and start docker compose services
      become: true
      community.docker.docker_compose:
        # Change to path to your docker-compose.yml. See below for how to clone a repo
        project_src: /root/adguard
        pull: true
        build: true
        remove_orphans: true
      register: output
  
